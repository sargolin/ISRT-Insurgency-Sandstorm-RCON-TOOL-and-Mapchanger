# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\source_files\isrt_main_v0.6.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_main_window(object):
    def setupUi(self, main_window):
        main_window.setObjectName("main_window")
        main_window.resize(660, 756)
        main_window.setMinimumSize(QtCore.QSize(660, 756))
        main_window.setMaximumSize(QtCore.QSize(2500, 1400))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(".\\img/isrt.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        main_window.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(main_window)
        self.centralwidget.setStatusTip("")
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setSpacing(4)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.dropdown_select_server = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dropdown_select_server.sizePolicy().hasHeightForWidth())
        self.dropdown_select_server.setSizePolicy(sizePolicy)
        self.dropdown_select_server.setMinimumSize(QtCore.QSize(100, 20))
        self.dropdown_select_server.setMaximumSize(QtCore.QSize(2500, 20))
        self.dropdown_select_server.setStyleSheet("background-color:rgb(248, 248, 248);")
        self.dropdown_select_server.setObjectName("dropdown_select_server")
        self.verticalLayout.addWidget(self.dropdown_select_server)
        self.entry_ip = QtWidgets.QLineEdit(self.centralwidget)
        self.entry_ip.setMinimumSize(QtCore.QSize(100, 20))
        self.entry_ip.setMaximumSize(QtCore.QSize(2500, 16777215))
        self.entry_ip.setText("")
        self.entry_ip.setObjectName("entry_ip")
        self.verticalLayout.addWidget(self.entry_ip)
        self.entry_queryport = QtWidgets.QLineEdit(self.centralwidget)
        self.entry_queryport.setMinimumSize(QtCore.QSize(100, 20))
        self.entry_queryport.setMaximumSize(QtCore.QSize(2500, 16777215))
        self.entry_queryport.setText("")
        self.entry_queryport.setObjectName("entry_queryport")
        self.verticalLayout.addWidget(self.entry_queryport)
        self.entry_rconport = QtWidgets.QLineEdit(self.centralwidget)
        self.entry_rconport.setMinimumSize(QtCore.QSize(100, 20))
        self.entry_rconport.setMaximumSize(QtCore.QSize(2500, 16777215))
        self.entry_rconport.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.entry_rconport.setText("")
        self.entry_rconport.setObjectName("entry_rconport")
        self.verticalLayout.addWidget(self.entry_rconport)
        self.entry_rconpw = QtWidgets.QLineEdit(self.centralwidget)
        self.entry_rconpw.setMinimumSize(QtCore.QSize(100, 20))
        self.entry_rconpw.setMaximumSize(QtCore.QSize(2500, 16777215))
        self.entry_rconpw.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.entry_rconpw.setText("")
        self.entry_rconpw.setEchoMode(QtWidgets.QLineEdit.PasswordEchoOnEdit)
        self.entry_rconpw.setObjectName("entry_rconpw")
        self.verticalLayout.addWidget(self.entry_rconpw)
        self.btn_main_exec_query = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_main_exec_query.sizePolicy().hasHeightForWidth())
        self.btn_main_exec_query.setSizePolicy(sizePolicy)
        self.btn_main_exec_query.setMinimumSize(QtCore.QSize(100, 0))
        self.btn_main_exec_query.setMaximumSize(QtCore.QSize(2500, 1000))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.btn_main_exec_query.setFont(font)
        self.btn_main_exec_query.setWhatsThis("")
        self.btn_main_exec_query.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.btn_main_exec_query.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_exec_query.setObjectName("btn_main_exec_query")
        self.verticalLayout.addWidget(self.btn_main_exec_query)
        self.horizontalLayout_3.addLayout(self.verticalLayout)
        self.label_map_view = QtWidgets.QLabel(self.centralwidget)
        self.label_map_view.setMinimumSize(QtCore.QSize(250, 125))
        self.label_map_view.setStyleSheet("border-image: url(:/map_view/img/maps/map_views.jpg);\n"
"background-color: #f0f0f0;\n"
"background-position: center;\n"
"background-repeat: no-repeat;")
        self.label_map_view.setFrameShape(QtWidgets.QFrame.Box)
        self.label_map_view.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_map_view.setText("")
        self.label_map_view.setObjectName("label_map_view")
        self.horizontalLayout_3.addWidget(self.label_map_view)
        self.verticalLayout_5.addLayout(self.horizontalLayout_3)
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.verticalLayout_7.addWidget(self.line_3)
        self.le_servername = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.le_servername.sizePolicy().hasHeightForWidth())
        self.le_servername.setSizePolicy(sizePolicy)
        self.le_servername.setMinimumSize(QtCore.QSize(400, 0))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.le_servername.setFont(font)
        self.le_servername.setAutoFillBackground(False)
        self.le_servername.setStyleSheet("background-color: rgb(240, 240, 240)")
        self.le_servername.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.le_servername.setReadOnly(True)
        self.le_servername.setObjectName("le_servername")
        self.verticalLayout_7.addWidget(self.le_servername)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_6.addWidget(self.label_6)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setObjectName("label_7")
        self.verticalLayout_6.addWidget(self.label_7)
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setObjectName("label_8")
        self.verticalLayout_6.addWidget(self.label_8)
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setObjectName("label_9")
        self.verticalLayout_6.addWidget(self.label_9)
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setObjectName("label_10")
        self.verticalLayout_6.addWidget(self.label_10)
        self.horizontalLayout_2.addLayout(self.verticalLayout_6)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.le_gamemode = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.le_gamemode.setFont(font)
        self.le_gamemode.setAutoFillBackground(False)
        self.le_gamemode.setStyleSheet("background-color: rgb(240, 240, 240)")
        self.le_gamemode.setText("")
        self.le_gamemode.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.le_gamemode.setReadOnly(True)
        self.le_gamemode.setObjectName("le_gamemode")
        self.verticalLayout_2.addWidget(self.le_gamemode)
        self.le_servermode = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.le_servermode.setFont(font)
        self.le_servermode.setAutoFillBackground(False)
        self.le_servermode.setStyleSheet("background-color: rgb(240, 240, 240)")
        self.le_servermode.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.le_servermode.setReadOnly(True)
        self.le_servermode.setObjectName("le_servermode")
        self.verticalLayout_2.addWidget(self.le_servermode)
        self.le_serverip_port = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.le_serverip_port.setFont(font)
        self.le_serverip_port.setAutoFillBackground(False)
        self.le_serverip_port.setStyleSheet("background-color: rgb(240, 240, 240)")
        self.le_serverip_port.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.le_serverip_port.setReadOnly(True)
        self.le_serverip_port.setObjectName("le_serverip_port")
        self.verticalLayout_2.addWidget(self.le_serverip_port)
        self.le_mods = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.le_mods.setFont(font)
        self.le_mods.setAutoFillBackground(False)
        self.le_mods.setStyleSheet("background-color: rgb(240, 240, 240)")
        self.le_mods.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.le_mods.setReadOnly(True)
        self.le_mods.setObjectName("le_mods")
        self.verticalLayout_2.addWidget(self.le_mods)
        self.le_map = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.le_map.setFont(font)
        self.le_map.setAutoFillBackground(False)
        self.le_map.setStyleSheet("background-color: rgb(240, 240, 240)")
        self.le_map.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.le_map.setReadOnly(True)
        self.le_map.setObjectName("le_map")
        self.verticalLayout_2.addWidget(self.le_map)
        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.verticalLayout_4.addWidget(self.label)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_4.addWidget(self.label_2)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_4.addWidget(self.label_3)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_4.addWidget(self.label_4)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_4.addWidget(self.label_5)
        self.horizontalLayout_2.addLayout(self.verticalLayout_4)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.le_vac = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.le_vac.setFont(font)
        self.le_vac.setAutoFillBackground(False)
        self.le_vac.setStyleSheet("background-color: rgb(240, 240, 240)")
        self.le_vac.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.le_vac.setReadOnly(True)
        self.le_vac.setObjectName("le_vac")
        self.verticalLayout_3.addWidget(self.le_vac)
        self.le_ranked = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.le_ranked.setFont(font)
        self.le_ranked.setAutoFillBackground(False)
        self.le_ranked.setStyleSheet("background-color: rgb(240, 240, 240)")
        self.le_ranked.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.le_ranked.setReadOnly(True)
        self.le_ranked.setObjectName("le_ranked")
        self.verticalLayout_3.addWidget(self.le_ranked)
        self.le_password = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.le_password.setFont(font)
        self.le_password.setAutoFillBackground(False)
        self.le_password.setStyleSheet("background-color: rgb(240, 240, 240)")
        self.le_password.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.le_password.setReadOnly(True)
        self.le_password.setObjectName("le_password")
        self.verticalLayout_3.addWidget(self.le_password)
        self.le_players = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.le_players.setFont(font)
        self.le_players.setAutoFillBackground(False)
        self.le_players.setStyleSheet("background-color: rgb(240, 240, 240)")
        self.le_players.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.le_players.setReadOnly(True)
        self.le_players.setObjectName("le_players")
        self.verticalLayout_3.addWidget(self.le_players)
        self.le_ping = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.le_ping.setFont(font)
        self.le_ping.setAutoFillBackground(False)
        self.le_ping.setStyleSheet("background-color: rgb(240, 240, 240)")
        self.le_ping.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.le_ping.setReadOnly(True)
        self.le_ping.setObjectName("le_ping")
        self.verticalLayout_3.addWidget(self.le_ping)
        self.horizontalLayout_2.addLayout(self.verticalLayout_3)
        self.verticalLayout_7.addLayout(self.horizontalLayout_2)
        self.verticalLayout_5.addLayout(self.verticalLayout_7)
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_5.addWidget(self.line_2)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setSpacing(5)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.dropdown_select_travelscenario = QtWidgets.QComboBox(self.centralwidget)
        self.dropdown_select_travelscenario.setMinimumSize(QtCore.QSize(150, 20))
        self.dropdown_select_travelscenario.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.dropdown_select_travelscenario.setStyleSheet("background-color:rgb(248, 248, 248);")
        self.dropdown_select_travelscenario.setObjectName("dropdown_select_travelscenario")
        self.horizontalLayout_5.addWidget(self.dropdown_select_travelscenario)
        self.dropdown_select_gamemode = QtWidgets.QComboBox(self.centralwidget)
        self.dropdown_select_gamemode.setMinimumSize(QtCore.QSize(130, 20))
        self.dropdown_select_gamemode.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.dropdown_select_gamemode.setStyleSheet("background-color:rgb(248, 248, 248);")
        self.dropdown_select_gamemode.setObjectName("dropdown_select_gamemode")
        self.dropdown_select_gamemode.addItem("")
        self.dropdown_select_gamemode.addItem("")
        self.dropdown_select_gamemode.addItem("")
        self.dropdown_select_gamemode.addItem("")
        self.dropdown_select_gamemode.addItem("")
        self.dropdown_select_gamemode.addItem("")
        self.dropdown_select_gamemode.addItem("")
        self.dropdown_select_gamemode.addItem("")
        self.dropdown_select_gamemode.addItem("")
        self.horizontalLayout_5.addWidget(self.dropdown_select_gamemode)
        self.dropdown_select_lighting = QtWidgets.QComboBox(self.centralwidget)
        self.dropdown_select_lighting.setMinimumSize(QtCore.QSize(80, 0))
        self.dropdown_select_lighting.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.dropdown_select_lighting.setStyleSheet("background-color:rgb(248, 248, 248);")
        self.dropdown_select_lighting.setObjectName("dropdown_select_lighting")
        self.dropdown_select_lighting.addItem("")
        self.dropdown_select_lighting.addItem("")
        self.horizontalLayout_5.addWidget(self.dropdown_select_lighting)
        self.btn_main_drcon_changemap = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_changemap.setMinimumSize(QtCore.QSize(100, 0))
        self.btn_main_drcon_changemap.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.btn_main_drcon_changemap.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_changemap.setAutoDefault(False)
        self.btn_main_drcon_changemap.setDefault(False)
        self.btn_main_drcon_changemap.setObjectName("btn_main_drcon_changemap")
        self.horizontalLayout_5.addWidget(self.btn_main_drcon_changemap)
        self.verticalLayout_5.addLayout(self.horizontalLayout_5)
        self.progressbar_map_changer = QtWidgets.QProgressBar(self.centralwidget)
        self.progressbar_map_changer.setMinimumSize(QtCore.QSize(0, 10))
        self.progressbar_map_changer.setMaximumSize(QtCore.QSize(16777215, 10))
        self.progressbar_map_changer.setProperty("value", 0)
        self.progressbar_map_changer.setTextVisible(False)
        self.progressbar_map_changer.setObjectName("progressbar_map_changer")
        self.verticalLayout_5.addWidget(self.progressbar_map_changer)
        self.horizontalLayout_4.addLayout(self.verticalLayout_5)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.horizontalLayout_4.addWidget(self.line)
        self.horizontalLayout_6.addLayout(self.horizontalLayout_4)
        self.verticalLayout_10 = QtWidgets.QVBoxLayout()
        self.verticalLayout_10.setSpacing(4)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.btn_main_drcon_help = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_help.setMinimumSize(QtCore.QSize(140, 0))
        self.btn_main_drcon_help.setMaximumSize(QtCore.QSize(140, 16777215))
        self.btn_main_drcon_help.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_help.setObjectName("btn_main_drcon_help")
        self.verticalLayout_10.addWidget(self.btn_main_drcon_help)
        self.btn_main_drcon_listplayers = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_listplayers.setMinimumSize(QtCore.QSize(140, 0))
        self.btn_main_drcon_listplayers.setMaximumSize(QtCore.QSize(140, 16777215))
        self.btn_main_drcon_listplayers.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_listplayers.setObjectName("btn_main_drcon_listplayers")
        self.verticalLayout_10.addWidget(self.btn_main_drcon_listplayers)
        self.btn_main_drcon_listbans = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_listbans.setMinimumSize(QtCore.QSize(140, 0))
        self.btn_main_drcon_listbans.setMaximumSize(QtCore.QSize(140, 16777215))
        self.btn_main_drcon_listbans.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_listbans.setObjectName("btn_main_drcon_listbans")
        self.verticalLayout_10.addWidget(self.btn_main_drcon_listbans)
        self.btn_main_drcon_listmaps = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_listmaps.setMinimumSize(QtCore.QSize(140, 0))
        self.btn_main_drcon_listmaps.setMaximumSize(QtCore.QSize(140, 16777215))
        self.btn_main_drcon_listmaps.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_listmaps.setObjectName("btn_main_drcon_listmaps")
        self.verticalLayout_10.addWidget(self.btn_main_drcon_listmaps)
        self.btn_main_drcon_listscenarios = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_listscenarios.setMinimumSize(QtCore.QSize(140, 0))
        self.btn_main_drcon_listscenarios.setMaximumSize(QtCore.QSize(140, 16777215))
        self.btn_main_drcon_listscenarios.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_listscenarios.setObjectName("btn_main_drcon_listscenarios")
        self.verticalLayout_10.addWidget(self.btn_main_drcon_listscenarios)
        self.btn_main_drcon_restartround = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_restartround.setMinimumSize(QtCore.QSize(140, 0))
        self.btn_main_drcon_restartround.setMaximumSize(QtCore.QSize(140, 16777215))
        self.btn_main_drcon_restartround.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_restartround.setObjectName("btn_main_drcon_restartround")
        self.verticalLayout_10.addWidget(self.btn_main_drcon_restartround)
        self.btn_main_drcon_showgamemode = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_showgamemode.setMinimumSize(QtCore.QSize(140, 0))
        self.btn_main_drcon_showgamemode.setMaximumSize(QtCore.QSize(140, 16777215))
        self.btn_main_drcon_showgamemode.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_showgamemode.setObjectName("btn_main_drcon_showgamemode")
        self.verticalLayout_10.addWidget(self.btn_main_drcon_showgamemode)
        self.btn_main_drcon_showaidiff = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_showaidiff.setMinimumSize(QtCore.QSize(140, 0))
        self.btn_main_drcon_showaidiff.setMaximumSize(QtCore.QSize(140, 16777215))
        self.btn_main_drcon_showaidiff.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_showaidiff.setObjectName("btn_main_drcon_showaidiff")
        self.verticalLayout_10.addWidget(self.btn_main_drcon_showaidiff)
        self.btn_main_drcon_showsupply = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_showsupply.setMinimumSize(QtCore.QSize(140, 0))
        self.btn_main_drcon_showsupply.setMaximumSize(QtCore.QSize(140, 16777215))
        self.btn_main_drcon_showsupply.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_showsupply.setObjectName("btn_main_drcon_showsupply")
        self.verticalLayout_10.addWidget(self.btn_main_drcon_showsupply)
        self.btn_main_drcon_roundlimit = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_roundlimit.setMinimumSize(QtCore.QSize(140, 0))
        self.btn_main_drcon_roundlimit.setMaximumSize(QtCore.QSize(140, 16777215))
        self.btn_main_drcon_roundlimit.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_roundlimit.setObjectName("btn_main_drcon_roundlimit")
        self.verticalLayout_10.addWidget(self.btn_main_drcon_roundlimit)
        self.btn_main_drcon_showroundtime = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_drcon_showroundtime.setMinimumSize(QtCore.QSize(140, 0))
        self.btn_main_drcon_showroundtime.setMaximumSize(QtCore.QSize(140, 16777215))
        self.btn_main_drcon_showroundtime.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_drcon_showroundtime.setObjectName("btn_main_drcon_showroundtime")
        self.verticalLayout_10.addWidget(self.btn_main_drcon_showroundtime)
        self.btn_main_copytoclipboard = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_copytoclipboard.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_copytoclipboard.setAutoDefault(False)
        self.btn_main_copytoclipboard.setDefault(False)
        self.btn_main_copytoclipboard.setFlat(False)
        self.btn_main_copytoclipboard.setObjectName("btn_main_copytoclipboard")
        self.verticalLayout_10.addWidget(self.btn_main_copytoclipboard)
        self.horizontalLayout_6.addLayout(self.verticalLayout_10)
        self.verticalLayout_8.addLayout(self.horizontalLayout_6)
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setMinimumSize(QtCore.QSize(561, 290))
        self.scrollArea.setMaximumSize(QtCore.QSize(2500, 1440))
        self.scrollArea.setAccessibleDescription("")
        self.scrollArea.setStyleSheet("background-color: rgba(240, 240, 240, 10);")
        self.scrollArea.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.scrollArea.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 621, 288))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollAreaWidgetContents.sizePolicy().hasHeightForWidth())
        self.scrollAreaWidgetContents.setSizePolicy(sizePolicy)
        self.scrollAreaWidgetContents.setStyleSheet("")
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.scrollAreaWidgetContents)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_output_window = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_output_window.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_output_window.sizePolicy().hasHeightForWidth())
        self.label_output_window.setSizePolicy(sizePolicy)
        self.label_output_window.setMinimumSize(QtCore.QSize(561, 281))
        self.label_output_window.setMaximumSize(QtCore.QSize(2500, 1400))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.label_output_window.setFont(font)
        self.label_output_window.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_output_window.setAutoFillBackground(False)
        self.label_output_window.setStyleSheet("border-image:url(:/img/img/Insurgency-Sandstorm.jpg);\n"
"background-color: #f0f0f0;\n"
"background-position: center;\n"
"background-repeat: no-repeat;")
        self.label_output_window.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_output_window.setText("")
        self.label_output_window.setScaledContents(True)
        self.label_output_window.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_output_window.setWordWrap(True)
        self.label_output_window.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.label_output_window.setObjectName("label_output_window")
        self.horizontalLayout_7.addWidget(self.label_output_window)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_8.addWidget(self.scrollArea)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_rconcommand = QtWidgets.QLineEdit(self.centralwidget)
        self.label_rconcommand.setMinimumSize(QtCore.QSize(315, 21))
        self.label_rconcommand.setMaximumSize(QtCore.QSize(2560, 21))
        self.label_rconcommand.setStyleSheet("")
        self.label_rconcommand.setText("")
        self.label_rconcommand.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_rconcommand.setClearButtonEnabled(False)
        self.label_rconcommand.setObjectName("label_rconcommand")
        self.horizontalLayout.addWidget(self.label_rconcommand)
        self.dropdown_command_history = QtWidgets.QComboBox(self.centralwidget)
        self.dropdown_command_history.setMinimumSize(QtCore.QSize(200, 20))
        self.dropdown_command_history.setStyleSheet("background-color:rgb(248, 248, 248);")
        self.dropdown_command_history.setObjectName("dropdown_command_history")
        self.horizontalLayout.addWidget(self.dropdown_command_history)
        self.btn_main_rcon_help = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_rcon_help.setMinimumSize(QtCore.QSize(20, 23))
        self.btn_main_rcon_help.setMaximumSize(QtCore.QSize(20, 23))
        self.btn_main_rcon_help.setBaseSize(QtCore.QSize(0, 0))
        self.btn_main_rcon_help.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_rcon_help.setObjectName("btn_main_rcon_help")
        self.horizontalLayout.addWidget(self.btn_main_rcon_help)
        self.btn_main_exec_rcon = QtWidgets.QPushButton(self.centralwidget)
        self.btn_main_exec_rcon.setMinimumSize(QtCore.QSize(85, 0))
        self.btn_main_exec_rcon.setMaximumSize(QtCore.QSize(75, 23))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.btn_main_exec_rcon.setFont(font)
        self.btn_main_exec_rcon.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.btn_main_exec_rcon.setStyleSheet("background-color:rgb(228, 228, 228)\n"
"")
        self.btn_main_exec_rcon.setObjectName("btn_main_exec_rcon")
        self.horizontalLayout.addWidget(self.btn_main_exec_rcon)
        self.verticalLayout_8.addLayout(self.horizontalLayout)
        self.label_error_reporting = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.label_error_reporting.setFont(font)
        self.label_error_reporting.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_error_reporting.setAlignment(QtCore.Qt.AlignCenter)
        self.label_error_reporting.setOpenExternalLinks(True)
        self.label_error_reporting.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByKeyboard|QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextBrowserInteraction|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.label_error_reporting.setObjectName("label_error_reporting")
        self.verticalLayout_8.addWidget(self.label_error_reporting)
        self.horizontalLayout_8.addLayout(self.verticalLayout_8)
        main_window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(main_window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 660, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menuServer = QtWidgets.QMenu(self.menubar)
        self.menuServer.setObjectName("menuServer")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        main_window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(main_window)
        self.statusbar.setObjectName("statusbar")
        main_window.setStatusBar(self.statusbar)
        self.menu_action_quit = QtWidgets.QAction(main_window)
        self.menu_action_quit.setObjectName("menu_action_quit")
        self.menu_action_about = QtWidgets.QAction(main_window)
        self.menu_action_about.setObjectName("menu_action_about")
        self.menu_action_help = QtWidgets.QAction(main_window)
        self.menu_action_help.setObjectName("menu_action_help")
        self.menu_action_server = QtWidgets.QAction(main_window)
        self.menu_action_server.setObjectName("menu_action_server")
        self.actionEdit_Server = QtWidgets.QAction(main_window)
        self.actionEdit_Server.setObjectName("actionEdit_Server")
        self.actionShow_Server_DB = QtWidgets.QAction(main_window)
        self.actionShow_Server_DB.setObjectName("actionShow_Server_DB")
        self.menu_action_update_list = QtWidgets.QAction(main_window)
        self.menu_action_update_list.setObjectName("menu_action_update_list")
        self.menu_action_copy = QtWidgets.QAction(main_window)
        self.menu_action_copy.setObjectName("menu_action_copy")
        self.menu_action_paste = QtWidgets.QAction(main_window)
        self.menu_action_paste.setObjectName("menu_action_paste")
        self.menu_action_map = QtWidgets.QAction(main_window)
        self.menu_action_map.setObjectName("menu_action_map")
        self.menu_action_histmgr = QtWidgets.QAction(main_window)
        self.menu_action_histmgr.setObjectName("menu_action_histmgr")
        self.menuFile.addAction(self.menu_action_quit)
        self.menu.addAction(self.menu_action_help)
        self.menu.addSeparator()
        self.menu.addAction(self.menu_action_about)
        self.menuServer.addAction(self.menu_action_server)
        self.menuServer.addAction(self.menu_action_histmgr)
        self.menuEdit.addAction(self.menu_action_copy)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuServer.menuAction())
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(main_window)
        QtCore.QMetaObject.connectSlotsByName(main_window)

    def retranslateUi(self, main_window):
        _translate = QtCore.QCoreApplication.translate
        main_window.setWindowTitle(_translate("main_window", "Insurgency Sandstorm RCON Tool - ISRT"))
        main_window.setStatusTip(_translate("main_window", "ISRT Insurgency Sandstorm RCON/Query Tool"))
        self.dropdown_select_server.setToolTip(_translate("main_window", "Select Server from DB"))
        self.dropdown_select_server.setStatusTip(_translate("main_window", "Select Server from DB"))
        self.dropdown_select_server.setPlaceholderText(_translate("main_window", "Select Server"))
        self.entry_ip.setStatusTip(_translate("main_window", "IP Address of the server"))
        self.entry_ip.setPlaceholderText(_translate("main_window", "Query IP-Address"))
        self.entry_queryport.setStatusTip(_translate("main_window", "Query Port of the server"))
        self.entry_queryport.setPlaceholderText(_translate("main_window", "Query Port"))
        self.entry_rconport.setStatusTip(_translate("main_window", "RCON Port of the server"))
        self.entry_rconport.setPlaceholderText(_translate("main_window", "RCON Port"))
        self.entry_rconpw.setStatusTip(_translate("main_window", "RCON Password of the server"))
        self.entry_rconpw.setPlaceholderText(_translate("main_window", "RCON Password"))
        self.btn_main_exec_query.setToolTip(_translate("main_window", "Execute a query command to the defined server"))
        self.btn_main_exec_query.setStatusTip(_translate("main_window", "Execute a query command to the defined server"))
        self.btn_main_exec_query.setText(_translate("main_window", "Get Server Info"))
        self.le_servername.setStatusTip(_translate("main_window", "Servername"))
        self.le_servername.setPlaceholderText(_translate("main_window", "Servername"))
        self.label_6.setText(_translate("main_window", "Gamemode:"))
        self.label_7.setText(_translate("main_window", "Servermode:"))
        self.label_8.setText(_translate("main_window", "IP + Port:"))
        self.label_9.setText(_translate("main_window", "Mods:"))
        self.label_10.setText(_translate("main_window", "Map:"))
        self.le_gamemode.setStatusTip(_translate("main_window", "Gamemode"))
        self.le_gamemode.setPlaceholderText(_translate("main_window", "Gamemode"))
        self.le_servermode.setStatusTip(_translate("main_window", "Servermode"))
        self.le_servermode.setPlaceholderText(_translate("main_window", "Servermode"))
        self.le_serverip_port.setStatusTip(_translate("main_window", "Server-IP+Port"))
        self.le_serverip_port.setPlaceholderText(_translate("main_window", "Server-IP + Gameport"))
        self.le_mods.setStatusTip(_translate("main_window", "Servermods"))
        self.le_mods.setPlaceholderText(_translate("main_window", "Mods"))
        self.le_map.setStatusTip(_translate("main_window", "Map"))
        self.le_map.setPlaceholderText(_translate("main_window", "Map"))
        self.label.setText(_translate("main_window", "VAC Secured:"))
        self.label_2.setText(_translate("main_window", "Ranked:"))
        self.label_3.setText(_translate("main_window", "Password:"))
        self.label_4.setText(_translate("main_window", "Players:"))
        self.label_5.setText(_translate("main_window", "Ping:"))
        self.le_vac.setStatusTip(_translate("main_window", "VAC Secured"))
        self.le_vac.setPlaceholderText(_translate("main_window", "VAC Secured"))
        self.le_ranked.setStatusTip(_translate("main_window", "Ranked Server"))
        self.le_ranked.setPlaceholderText(_translate("main_window", "Ranked Server"))
        self.le_password.setStatusTip(_translate("main_window", "Passworded Server"))
        self.le_password.setPlaceholderText(_translate("main_window", "Passworded Server"))
        self.le_players.setStatusTip(_translate("main_window", "Players"))
        self.le_players.setPlaceholderText(_translate("main_window", "Players"))
        self.le_ping.setStatusTip(_translate("main_window", "Ping"))
        self.le_ping.setPlaceholderText(_translate("main_window", "Ping"))
        self.dropdown_select_travelscenario.setToolTip(_translate("main_window", "Choose the Scenario the server should travel to"))
        self.dropdown_select_travelscenario.setStatusTip(_translate("main_window", "Choose the Scenario the server should travel to"))
        self.dropdown_select_travelscenario.setPlaceholderText(_translate("main_window", "Choose Map to travel to"))
        self.dropdown_select_gamemode.setToolTip(_translate("main_window", "Select Gamemode to run"))
        self.dropdown_select_gamemode.setStatusTip(_translate("main_window", "Select Gamemode to run"))
        self.dropdown_select_gamemode.setPlaceholderText(_translate("main_window", "CheckpointHardcore"))
        self.dropdown_select_gamemode.setItemText(0, _translate("main_window", "CheckpointHardcore"))
        self.dropdown_select_gamemode.setItemText(1, _translate("main_window", "Checkpoint"))
        self.dropdown_select_gamemode.setItemText(2, _translate("main_window", "Domination"))
        self.dropdown_select_gamemode.setItemText(3, _translate("main_window", "Firefight"))
        self.dropdown_select_gamemode.setItemText(4, _translate("main_window", "Frontline"))
        self.dropdown_select_gamemode.setItemText(5, _translate("main_window", "Outpost"))
        self.dropdown_select_gamemode.setItemText(6, _translate("main_window", "Push"))
        self.dropdown_select_gamemode.setItemText(7, _translate("main_window", "Skirmish"))
        self.dropdown_select_gamemode.setItemText(8, _translate("main_window", "TeamDeathmatch"))
        self.dropdown_select_lighting.setToolTip(_translate("main_window", "Select Lighting for Scenario"))
        self.dropdown_select_lighting.setStatusTip(_translate("main_window", "Select Lighting for Scenario"))
        self.dropdown_select_lighting.setPlaceholderText(_translate("main_window", "Day"))
        self.dropdown_select_lighting.setItemText(0, _translate("main_window", "Day"))
        self.dropdown_select_lighting.setItemText(1, _translate("main_window", "Night"))
        self.btn_main_drcon_changemap.setToolTip(_translate("main_window", "Change Map with before defined Travel command"))
        self.btn_main_drcon_changemap.setStatusTip(_translate("main_window", "Change Map with before defined Travel command"))
        self.btn_main_drcon_changemap.setText(_translate("main_window", "Change Map"))
        self.btn_main_drcon_help.setToolTip(_translate("main_window", "Show the RCON help"))
        self.btn_main_drcon_help.setStatusTip(_translate("main_window", "Show the RCON help"))
        self.btn_main_drcon_help.setText(_translate("main_window", "Help"))
        self.btn_main_drcon_listplayers.setToolTip(_translate("main_window", "List currenty Players"))
        self.btn_main_drcon_listplayers.setStatusTip(_translate("main_window", "List currenty Players"))
        self.btn_main_drcon_listplayers.setText(_translate("main_window", "Listplayers"))
        self.btn_main_drcon_listbans.setToolTip(_translate("main_window", "List applied Bans"))
        self.btn_main_drcon_listbans.setStatusTip(_translate("main_window", "List applied Bans"))
        self.btn_main_drcon_listbans.setText(_translate("main_window", "List Bans"))
        self.btn_main_drcon_listmaps.setToolTip(_translate("main_window", "List available Maps"))
        self.btn_main_drcon_listmaps.setStatusTip(_translate("main_window", "List available Maps"))
        self.btn_main_drcon_listmaps.setText(_translate("main_window", "List Maps"))
        self.btn_main_drcon_listscenarios.setToolTip(_translate("main_window", "List available Scenarios"))
        self.btn_main_drcon_listscenarios.setStatusTip(_translate("main_window", "List available Scenarios"))
        self.btn_main_drcon_listscenarios.setText(_translate("main_window", "List Scenarios <Map>"))
        self.btn_main_drcon_restartround.setToolTip(_translate("main_window", "Restart Round without switching sides"))
        self.btn_main_drcon_restartround.setStatusTip(_translate("main_window", "Restart Round without switching sides"))
        self.btn_main_drcon_restartround.setText(_translate("main_window", "Restart Round"))
        self.btn_main_drcon_showgamemode.setToolTip(_translate("main_window", "Show all Gamemode Properties"))
        self.btn_main_drcon_showgamemode.setStatusTip(_translate("main_window", "Show all Gamemode Properties"))
        self.btn_main_drcon_showgamemode.setText(_translate("main_window", "Show GameMode"))
        self.btn_main_drcon_showaidiff.setToolTip(_translate("main_window", "Show AI Difficulty setting"))
        self.btn_main_drcon_showaidiff.setStatusTip(_translate("main_window", "Show AI Difficulty setting"))
        self.btn_main_drcon_showaidiff.setText(_translate("main_window", "Show AI Difficulty"))
        self.btn_main_drcon_showsupply.setToolTip(_translate("main_window", "Show Initial Supply for buying equipment"))
        self.btn_main_drcon_showsupply.setStatusTip(_translate("main_window", "Show Initial Supply for buying equipment"))
        self.btn_main_drcon_showsupply.setText(_translate("main_window", "Show Initial Supply"))
        self.btn_main_drcon_roundlimit.setToolTip(_translate("main_window", "Show Round Win Limit"))
        self.btn_main_drcon_roundlimit.setStatusTip(_translate("main_window", "Show Round Win Limit"))
        self.btn_main_drcon_roundlimit.setText(_translate("main_window", "Show Round Limit"))
        self.btn_main_drcon_showroundtime.setToolTip(_translate("main_window", "Show the current round time set"))
        self.btn_main_drcon_showroundtime.setStatusTip(_translate("main_window", "Show the current round time set"))
        self.btn_main_drcon_showroundtime.setText(_translate("main_window", "Show Round Time"))
        self.btn_main_copytoclipboard.setToolTip(_translate("main_window", "Copy the output of console to Clipboard"))
        self.btn_main_copytoclipboard.setStatusTip(_translate("main_window", "Copy the output of console to Clipboard"))
        self.btn_main_copytoclipboard.setText(_translate("main_window", "Copy Console Output"))
        self.label_output_window.setStatusTip(_translate("main_window", "ISRT - Insurgency Sandstorm RCON/Query Tool"))
        self.label_rconcommand.setStatusTip(_translate("main_window", "Enter RCON commands"))
        self.label_rconcommand.setPlaceholderText(_translate("main_window", "RCon Command"))
        self.dropdown_command_history.setPlaceholderText(_translate("main_window", "Command History"))
        self.btn_main_rcon_help.setToolTip(_translate("main_window", "Show RCON help and list available commands"))
        self.btn_main_rcon_help.setStatusTip(_translate("main_window", "Show RCON help and list available commands"))
        self.btn_main_rcon_help.setText(_translate("main_window", "?"))
        self.btn_main_exec_rcon.setToolTip(_translate("main_window", "Execute the before defined RCON command"))
        self.btn_main_exec_rcon.setStatusTip(_translate("main_window", "Execute the before defined RCON command"))
        self.btn_main_exec_rcon.setText(_translate("main_window", "Submit RCON"))
        self.btn_main_exec_rcon.setShortcut(_translate("main_window", "Ctrl+R"))
        self.label_error_reporting.setToolTip(_translate("main_window", "Info on error reporting"))
        self.label_error_reporting.setStatusTip(_translate("main_window", "Info on error reporting"))
        self.label_error_reporting.setText(_translate("main_window", "<html><head/><body><p>Please report any bugs, errors or feature requests using this link:  <span style=\" font-weight:600;\"/><a href=\"https://github.com/sargolin/ISRT-Insurgency-Sandstorm-RCON-Query-Tool/issues\">https://github.com/sargolin/ISRT-Insurgency-Sandstorm-RCON-Query-Tool/issues</a></p></body></html>"))
        self.menuFile.setTitle(_translate("main_window", "File"))
        self.menu.setTitle(_translate("main_window", "?"))
        self.menuServer.setTitle(_translate("main_window", "Configure"))
        self.menuEdit.setTitle(_translate("main_window", "Edit"))
        self.menu_action_quit.setText(_translate("main_window", "Quit"))
        self.menu_action_quit.setStatusTip(_translate("main_window", "File Menu"))
        self.menu_action_quit.setShortcut(_translate("main_window", "Ctrl+Q"))
        self.menu_action_about.setText(_translate("main_window", "About"))
        self.menu_action_about.setStatusTip(_translate("main_window", "About this App"))
        self.menu_action_about.setShortcut(_translate("main_window", "Ctrl+I"))
        self.menu_action_help.setText(_translate("main_window", "Rcon Help"))
        self.menu_action_help.setStatusTip(_translate("main_window", "Help Menu"))
        self.menu_action_help.setShortcut(_translate("main_window", "Ctrl+R"))
        self.menu_action_server.setText(_translate("main_window", "Server Manager"))
        self.menu_action_server.setToolTip(_translate("main_window", "Add, delete or edit Servers in Database"))
        self.menu_action_server.setStatusTip(_translate("main_window", "Add, delete or edit Servers in Database"))
        self.menu_action_server.setShortcut(_translate("main_window", "Ctrl+S"))
        self.actionEdit_Server.setText(_translate("main_window", "Edit Server"))
        self.actionEdit_Server.setStatusTip(_translate("main_window", "Edit Server"))
        self.actionEdit_Server.setShortcut(_translate("main_window", "Ctrl+E"))
        self.actionShow_Server_DB.setText(_translate("main_window", "Show Server DB"))
        self.actionShow_Server_DB.setStatusTip(_translate("main_window", "Show Server Database"))
        self.actionShow_Server_DB.setShortcut(_translate("main_window", "Ctrl+S"))
        self.menu_action_update_list.setText(_translate("main_window", "Update DropDown Menu"))
        self.menu_action_update_list.setStatusTip(_translate("main_window", "Update DropDown Menu in main Window"))
        self.menu_action_update_list.setShortcut(_translate("main_window", "Ctrl+U"))
        self.menu_action_copy.setText(_translate("main_window", "Copy"))
        self.menu_action_copy.setToolTip(_translate("main_window", "Copy to Clipboard"))
        self.menu_action_copy.setStatusTip(_translate("main_window", "Copy to Clipboard"))
        self.menu_action_copy.setShortcut(_translate("main_window", "Ctrl+C"))
        self.menu_action_paste.setText(_translate("main_window", "Paste"))
        self.menu_action_paste.setToolTip(_translate("main_window", "Paste from Clipboard"))
        self.menu_action_paste.setStatusTip(_translate("main_window", "Paste from Clipboard"))
        self.menu_action_paste.setShortcut(_translate("main_window", "Ctrl+V"))
        self.menu_action_map.setText(_translate("main_window", "Map Manager"))
        self.menu_action_map.setToolTip(_translate("main_window", "Add, edt or delete Maps in the Database"))
        self.menu_action_map.setStatusTip(_translate("main_window", "Add, edt or delete Maps in the Database"))
        self.menu_action_map.setShortcut(_translate("main_window", "Ctrl+M"))
        self.menu_action_histmgr.setText(_translate("main_window", "History Manager"))
        self.menu_action_histmgr.setShortcut(_translate("main_window", "Ctrl+H"))
import res_rc
